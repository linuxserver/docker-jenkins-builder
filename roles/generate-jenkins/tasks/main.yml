---

#######################
#   Set UID and GID   #
#######################

- name: set UID
  when: lookup('env', 'PUID')
  user:
    name: abc
    non_unique: yes
    uid: "{{ lookup('env', 'PUID') | int }}"
- name: set UID
  when: lookup('env', 'PGID')
  group:
    name: abc
    non_unique: yes
    gid: "{{ lookup('env', 'PGID') | int }}"

######################################
#   Grab the Variables from github   #
######################################
- name: download variables
  when: lookup('env', 'LOCAL') != "true"
  get_url:
    url: "https://raw.githubusercontent.com/{{ github_user }}/docker-{{ container_name }}/{{ github_branch }}/{{ item }}"
    dest: "/tmp/{{ item }}"
  loop: "{{  templated_vars  }}"

- name: include var files for this project
  include_vars:
    file: "/tmp/{{ item }}"
  loop: "{{  templated_vars  }}"

- name: Inlcude template loop variables
  include_vars:
    file: "/ansible/roles/generate-jenkins/templates.yml"

############################
#   Directory Management   #
############################
- name: create destination dir for generated Jenkinsfile
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ github_project_name }}"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ github_project_name }}/.github"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github workflow files
  when: lookup('env', 'LOCAL') == "true"
  file:
    path: "/tmp/.github/workflows"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated github workflow files
  when: lookup('env', 'LOCAL') != "true"
  file:
    path: "jenkins/{{ github_project_name }}/.github/workflows"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated donate.txt
  when:
    - lookup('env', 'LOCAL') == "true"
    - sponsor_links is defined
  file:
    path: "/tmp/root"
    state: directory
    owner: "abc"
    group: "abc"

- name: create destination dir for generated donate.txt
  when:
    - lookup('env', 'LOCAL') != "true"
    - sponsor_links is defined
  file:
    path: "jenkins/{{ github_project_name }}/root"
    state: directory
    owner: "abc"
    group: "abc"

- name: Create symbolic link for legacy pathing
  when: lookup('env', 'LOCAL') != "true"
  shell: "ln -s {{ github_project_name }} {{ project_name }}"
  args:
    chdir: /ansible/jenkins

##############################
#   Loop Through Templates   #
##############################

# Normal Files
- name: write templates
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is not defined
    - item.donate is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ github_project_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write templates local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is not defined
    - item.donate is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Readme templating

- name: write readme normal
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ github_project_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme normal local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is not defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme full custom
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "jenkins/{{ github_project_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write readme full custom local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.readme is defined
    - full_custom_readme is defined
  template:
    src: "../templates/{{ item.src }}-CUSTOM"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

# Donation links templating

- name: write donation links
  when:
    - lookup('env', 'LOCAL') != "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "jenkins/{{ github_project_name }}/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

- name: write donation links local
  when:
    - lookup('env', 'LOCAL') == "true"
    - item.donate is defined
    - sponsor_links is defined
  template:
    src: "../templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
    owner: "abc"
    group: "abc"
  delegate_to: localhost
  loop: "{{  templated_files  }}"

##########################################
#  For build nodes not running as Root   #
##########################################
- name: Allow non root host to delete temp files
  when:
    - lookup('env', 'LOCAL') != "true"
  command: chmod -R 777 /ansible/jenkins
  delegate_to: localhost
